{{! Partial for a single post }}
<div id = "post-{{id}}" class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
            <img src="/avatars/{{username}}.png" alt="{{username}}'s avatar" class="avatar">
    </div>
    <div class= "post-content preserve-newlines">
        <!-- the post -->
        <h3>{{title}}</h3>
        <p>{{username}}</p>
        <p>{{content}}</p>
        <div class="post-status-bar">
            {{#ifEqual user.username  username}}
                <button class="delete-button" data-id="{{id}}" onclick="handleDeleteClick(event)">
                    <i class="fas fa-trash-alt"></i>
                </button>
            {{else}}
                <button class="like-button" data-id="{{id}}" onclick="handleLikeClick(event)" style="color: {{#if liked}}red{{/if}};">
                    ♥
                </button>
            {{/ifEqual}}
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ♥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
        <p id= 'likes-{{id}}'>{{likes.length}} likes</p>
        <p>Posted by {{username}} on  {{timestamp}}</p>
        </div>        
    </div>
</div>
<script>
    async function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');
        const likeButton = event.target.closest('.like-button');
        const isLiked = likeButton.style.color === 'red';


        console.log("liking post on frontend");
        try {
            const response = await fetch(`/like/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            console.log('-------before setting likes');
            console.log(`Response status: ${response.status}`);
            console.log('Response body:', await response.text());

            if (response.ok){
            console.log('likes');

            const likes = document.getElementById(`likes-${postId}`);
            const currentLikes = parseInt(likes.textContent.split(' ')[0], 10);
            likes.textContent = `${isLiked ? currentLikes - 1 : currentLikes + 1} likes`;

            likeButton.style.color = isLiked ? '' : 'red';

        }
        else{
            console.log("failed");
        }
        }
        catch{
            console.error('Error liking the post:', error);
        }
        console.log("done");

        // you might want to "fetch" something...        
    }

    async function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');    
        //console.log("deleting post on frontend");
    

        // you might want to "fetch" something... 
        try {
            const response = await fetch(`/delete/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            console.log('-------before setting likes');
            console.log(`Response status: ${response.status}`);
            console.log('Response body:', await response.text());

            if (response.ok){
            console.log('deleting posts');

            const post = document.getElementById(`post-${postId}`);
            if(post){
                post.remove();
            }
        }        
        }
            catch (error) {
            console.error('Error deleting the post:', error);
        }       
        
    }    
</script>